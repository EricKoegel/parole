m4_define([intltool_minimum_version], [0.31])
m4_define([parole_version_major],  [0])
m4_define([parole_version_minor],  [1])
m4_define([parole_version_micro],  [0])
m4_define([parole_version_build],  [r@REVISION@])
m4_define([parole_version_tag], [svn])
m4_define([parole_version], [parole_version_major().parole_version_minor().parole_version_micro()ifelse(parole_version_tag(), [svn], [parole_version_tag().parole_version_build()], [parole_version_tag()])])

AC_INIT([parole-media-player], [parole_version], [aliov@xfce.org])
AC_PREREQ(2.50)

AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE

# ===================================================== #
#               Check for UNIX variants                 #
# ===================================================== #
AC_AIX
AC_ISC_POSIX
AC_MINIX

# ===================================================== #
#               Basic compiler settings                 #
# ===================================================== #
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_LD
AC_PROG_INSTALL
AC_PROG_INTLTOOL([intltool_minimum_version], [no-xml])

# ===================================================== #
#               Initialize libtool                      #
# ===================================================== #
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

# ==================================================== #
#   Check for headers needed for standard interfaces   #
# ==================================================== #
AC_HEADER_STDC
AC_CHECK_HEADERS([errno.h signal.h stddef.h \
                  string.h sys/stat.h sys/types.h sys/wait.h time.h \
                  unistd.h])

# ===================================================== #
# 		Check for i18n support 			#
# ===================================================== #

XDT_I18N([@LINGUAS@])

#==================================================== #
#          Check for required packages 		      #
#=====================================================#
m4_define([gtk_minimum_version], [2.16.0])
m4_define([glib_minimum_version], [2.16.0])
m4_define([gstreamer_minimum_version], [0.10.11])

m4_define([dbus_minimum_version], [0.60])
m4_define([dbus_glib_minimum_version], [0.70])

m4_define([libxfcegui4_minimum_version],[4.6.0])
m4_define([libxfce4util_minimum_version],[4.6.0])

m4_define([libnotify_minimum_version], [0.4.1])

XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [gtk_minimum_version])
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [glib_minimum_version])
XDT_CHECK_PACKAGE([GOBJECT], [gobject-2.0], [glib_minimum_version])
XDT_CHECK_PACKAGE([GTHREAD], [gthread-2.0], [glib_minimum_version])
XDT_CHECK_PACKAGE([GMODULE], [gmodule-2.0], [glib_minimum_version])
XDT_CHECK_PACKAGE([GIO], [gio-2.0], [glib_minimum_version])

XDT_CHECK_PACKAGE([GST], [gstreamer-0.10], [gstreamer_minimum_version])
XDT_CHECK_PACKAGE([GST_BASE], [gstreamer-base-0.10], [gstreamer_minimum_version])
XDT_CHECK_PACKAGE([GST_INTERFACES], [gstreamer-interfaces-0.10], [gstreamer_minimum_version])

XDT_CHECK_PACKAGE([DBUS], [dbus-1], [dbus_minimum_version])
XDT_CHECK_PACKAGE([DBUS_GLIB], [dbus-glib-1], [dbus_glib_minimum_version])

XDT_CHECK_PACKAGE([LIBXFCE4GUI], [libxfcegui4-1.0],[libxfcegui4_minimum_version])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0],[libxfce4util_minimum_version])

#=======================================================#
#           Check for availability of libnotify         #
#=======================================================#
LIBNOTIFY_FOUND="no"
XDT_CHECK_OPTIONAL_PACKAGE([LIBNOTIFY],
                       [libnotify], [libnotify_minimum_version],
                       [libnotify], 
                       [libnotify library], [yes])

# Taken from Gnome system tools
#=======================================================#
#              Pixmaps and interface files              #
#=======================================================#
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/ui", [path where UI files will be installed])
  interfacesdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/ui"
else
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/ui", [path where UI files will be installed])
  interfacesdir="${prefix}/${DATADIRNAME}/${PACKAGE}/ui"
fi

AC_SUBST(pixmapsdir)
AC_SUBST(interfacesdir)

#=======================================================#
#              Check for debugging support              #
#=======================================================#
XDT_FEATURE_DEBUG

AC_OUTPUT([
Makefile
data/Makefile
data/pixmaps/Makefile
data/interfaces/Makefile
data/icons/Makefile
data/mime/Makefile
data/desktop/Makefile
src/Makefile
po/Makefile.in
])

echo "
--------------------------------------------------
            Parole Media Player $VERSION
        ====================================
 
        prefix:                 $prefix
	interface_dir		$interfacesdir
	pixmapsdir		$pixmapsdir
	Notification		$LIBNOTIFY_FOUND
        Debug        support:   $enable_debug
--------------------------------------------------

Configuration finished, type make to compile"
